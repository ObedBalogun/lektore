# Generated by Django 4.2 on 2024-01-31 00:53

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('post_title', models.CharField(max_length=50)),
                ('post_body', models.TextField()),
                ('post_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='community_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('course_name', models.CharField(max_length=255)),
                ('course_id', models.CharField(max_length=25, unique=True)),
                ('course_duration', models.FloatField(default=0)),
                ('course_category', models.CharField(max_length=50)),
                ('course_type', models.CharField(choices=[('live', 'Live'), ('other', 'Other')], max_length=50)),
                ('course_rate', models.CharField(choices=[('hr', '/hr'), ('total', 'total')], max_length=10)),
                ('course_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('course_description', models.TextField()),
                ('course_overview', models.TextField()),
                ('intro_video', models.URLField()),
                ('is_active', models.BooleanField(default=True)),
                ('course_rating', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('module_name', models.CharField(max_length=256)),
                ('module_description', models.TextField()),
                ('module_duration', models.FloatField(default=0)),
                ('module_video', models.URLField(null=True, verbose_name='Link to module video')),
                ('module_audio', models.URLField(null=True, verbose_name='Link to module audio')),
                ('module_pdf', models.URLField(verbose_name='Link to module pdf')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_modules', to='app.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('user_category', models.CharField(choices=[('tutor', 'Tutor'), ('tutee', 'Tutee')], max_length=10)),
                ('provider', models.CharField(max_length=150)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='user_wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('destination', models.CharField(max_length=250)),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit'), ('refund', 'Refund')], max_length=10)),
                ('transaction_category', models.CharField(choices=[('course_order', 'Course Order'), ('deposit', 'Deposit')], max_length=200)),
                ('payment_status', models.BooleanField(default=False)),
                ('reference', models.CharField(blank=True, max_length=256, null=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wallet_transaction', to='app.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='UserVerificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=80, null=True)),
                ('otp_is_verified', models.BooleanField(default=False)),
                ('counter', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TutorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('nationality', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('current_country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('current_state', models.CharField(blank=True, max_length=256, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('non_binary', 'Non Binary')], max_length=15, null=True)),
                ('profile_picture', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, default='1888-08-08', null=True)),
                ('tutor_id', models.CharField(max_length=10, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_qualified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='tutor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TuteeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('nationality', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('current_country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('current_state', models.CharField(blank=True, max_length=256, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('non_binary', 'Non Binary')], max_length=15, null=True)),
                ('profile_picture', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, default='1888-08-08', null=True)),
                ('tutee_id', models.CharField(max_length=10, unique=True)),
                ('experience_level', models.CharField(blank=True, choices=[('beginner', '1-3 Years'), ('novice', '3-5 Years'), ('advanced', '5-10 Years'), ('expert', '10+ Years')], max_length=100, null=True)),
                ('is_qualified', models.BooleanField(default=False)),
                ('from_destination', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('to_destination', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('last_seen', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='tutee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TuteeOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('purchase_status', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutee_orders', to='app.course')),
                ('tutee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.tuteeprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegisteredTuteeCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_module_video_completed', models.BooleanField(default=False)),
                ('is_module_audio_completed', models.BooleanField(default=False)),
                ('is_module_pdf_completed', models.BooleanField(default=False)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registered_tutees', to='app.course')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutee_course_modules', to='app.module')),
                ('tutee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registered_courses', to='app.tuteeprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostAppraisal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('appraisal_type', models.CharField(choices=[('like', 'Like'), ('love', 'Love')], max_length=5)),
                ('appraised_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appraisals', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appraisals', to='app.communitypost')),
            ],
        ),
        migrations.CreateModel(
            name='EducationalQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('highest_qualification', models.CharField(choices=[('PhD', 'Doctor of Philosophy'), ('MD', 'Doctor of Medicine'), ('JD', 'Juris Doctor'), ('MBA', 'Master of Business Administration'), ('MFA', 'Master of Fine Arts'), ('MA', 'Master of Arts'), ('MSc', 'Master of Science'), ('MEd', 'Master of Education'), ('LLB', 'Bachelor of Laws'), ('BA', 'Bachelor of Arts'), ('BSc', 'Bachelor of Science'), ('BEd', 'Bachelor of Education'), ('BSN', 'Bachelor of Science in Nursing'), ('BFA', 'Bachelor of Fine Arts'), ('BBA', 'Bachelor of Business Administration'), ('AA', 'Associate of Arts'), ('AS', 'Associate of Science'), ('AAS', 'Associate of Applied Science'), ('Certificate', 'Certificate')], max_length=100)),
                ('previous_age_group', models.CharField(blank=True, max_length=100, null=True, verbose_name='Previous Age Group Taught')),
                ('current_age_group', models.CharField(blank=True, max_length=100, null=True, verbose_name='Current Age Group Able to Teach')),
                ('teaching_experience', models.TextField(blank=True, null=True)),
                ('subjects_taught', models.TextField(blank=True, null=True)),
                ('qualified', models.BooleanField(default=False)),
                ('pending_qualifications', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Pending Qualifications')),
                ('remote_teaching', models.BooleanField(default=False)),
                ('intro_video', models.CharField(blank=True, max_length=255, null=True)),
                ('tutor_resume', models.CharField(blank=True, max_length=255, null=True)),
                ('certification_list', models.JSONField(blank=True, null=True)),
                ('tutor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='educational_qualifications', to='app.tutorprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='course',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tutorprofile'),
        ),
        migrations.CreateModel(
            name='ChatThread',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('online_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=512)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_to_me', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_from_me', to=settings.AUTH_USER_MODEL)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='app.chatthread')),
            ],
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='app_wallett_created_393509_brin'),
        ),
        migrations.AddIndex(
            model_name='tutorprofile',
            index=models.Index(fields=['tutor_id'], name='app_tutorpr_tutor_i_e0911e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='postappraisal',
            unique_together={('post', 'appraised_by')},
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['course_id'], name='app_course_course__68a68e_idx'),
        ),
    ]
